Bit-masking 연산(비트마스킹 연산)
- 비트마스킹 연산은 컴퓨터 프로그래밍에서 데이터의 비트(bit)를 직접 조작하는 방법입니다. 이는 주로 설정, 토글, 체크, 이동 등의 목적으로 사용되며, 효율적인 데이터 저장과 처리에 유용합니다. 비트마스킹 연산의 주요 종류는 다음과 같습니다:
- 비트마스킹은 주로 성능이 중요한 시스템 프로그래밍, 임베디드 시스템, 그래픽 처리, 네트워크 프로토콜 등에서 사용됩니다. 이러한 연산은 컴퓨터의 기본적인 데이터 처리 단위인 비트 단위에서 작동하기 때문에 매우 빠르고 효율적입니다.


종류 
1. AND 연산 (&): 두 비트 모두 1일 때 결과가 1입니다. 비트를 체크하거나 특정 비트를 0으로 설정하는 데 사용됩니다.
2. OR 연산 (|): 두 비트 중 하나라도 1이면 결과가 1입니다. 비트를 설정할 때 사용됩니다.
3. XOR 연산 (^): 두 비트가 서로 다를 때 결과가 1입니다. 비트를 토글할 때 사용됩니다.
4. NOT 연산 (~): 비트를 반전시킵니다. 1은 0으로, 0은 1로 변경됩니다.
5. Left Shift (<<): 모든 비트를 왼쪽으로 지정된 수만큼 이동시킵니다. 데이터를 두 배로 증가시키거나 특정 위치에 비트를 설정하는 데 사용됩니다.
6. Right Shift (>>): 모든 비트를 오른쪽으로 지정된 수만큼 이동시킵니다. 데이터를 반으로 줄이거나 특정 비트를 추출하는 데 사용됩니다.

